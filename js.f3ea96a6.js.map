{"version":3,"sources":["js/refs.js","js/fetchCountries.js","js/index.js"],"names":["refs","container","document","querySelector","input","btn","result","fullCountryInfo","fetchCountries","inputValue","fetch","then","response","ok","json","a","pnotify","title","text","getInputValue","e","getCountryName","target","value","trim","renderMarkup","countries","reset","console","log","forEach","country","length","insertAdjacentHTML","name","capital","population","languages","flag","innerHTML","addEventListener"],"mappings":";AAAO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,EAAA,MAAMA,EAAO,CAClBC,UAAWC,SAASC,cAAc,cAClCC,MAAOF,SAASC,cAAc,iBAC9BE,IAAKH,SAASC,cAAc,QAC5BG,OAAQJ,SAASC,cAAc,0BAC/BI,gBAAiBL,SAASC,cAAc,uBALnC,QAAA,KAAA;;ACSN,aATc,SAASK,EAAeC,GAG5BC,OAAAA,+CAF8CD,KAGpDE,KAAKC,IACEA,GAAAA,EAASC,GACJD,OAAAA,EAASE,SAGzB,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;;;ACkDA,aA3DD,IAAA,EAAA,QAAA,aACA,EAAA,EAAA,QAAA,wBACA,EAAA,EAAA,QAAA,iBAyDC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAtDD,SAASC,IACHC,IAAAA,EAAJ,QAAY,CACVC,MAAO,sBACPC,KAAM,oCASV,SAASC,EAAcC,GAGrBC,EAFiBD,EAAEE,OAAOC,MAAMC,QAMlC,SAASC,EAAaC,GACpBC,IACAC,QAAQC,IAAIH,GACZA,EAAUI,QAAQC,IACS,IAArBL,EAAUM,OACPzB,EAAAA,KAAAA,gBAAgB0B,mBACnB,wCAC4BF,EAAQG,qJAGUH,EAAQI,wEACLJ,EAAQK,iHAE3BL,EAAQM,UAAUH,gGAGRH,EAAQO,yDAGzCZ,EAAUM,QAAU,GAAKN,EAAUM,OAAS,GAChD1B,EAAAA,KAAAA,OAAO2B,mBAAmB,6CAA8CF,EAAQG,aAC5ER,EAAUM,OAAS,IAC5BJ,QAAQC,IAAI,4BAMlB,SAASR,EAAeZ,IACPA,EAAAA,EAAAA,SAAAA,GAAYE,KAAKe,GAAaD,EAAaC,IAG5D,SAASC,IACFpB,EAAAA,KAAAA,gBAAgBgC,UAAY,GAC5BjC,EAAAA,KAAAA,OAAOiC,UAAY,GA9C1BxB,IAGAf,EAAKI,KAAAA,MAAMoC,iBAAiB,QAASrB","file":"js.f3ea96a6.js","sourceRoot":"../src","sourcesContent":["export const refs = {\r\n  container: document.querySelector('.container'),\r\n  input: document.querySelector('.search-value'),\r\n  btn: document.querySelector('.btn'),\r\n  result: document.querySelector('.country-search-result'),\r\n  fullCountryInfo: document.querySelector('.full-country-info'),\r\n};","export default function fetchCountries(inputValue) {  \r\n    const url = `https://restcountries.eu/rest/v2/name/${inputValue}`; \r\n\r\n    return fetch(url)\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n      })     \r\n};","import { refs } from './refs.js';\nimport fetchCountries from './fetchCountries.js';\nimport pnotify from './pnotify.js'\n// // var debounce = require('lodash.debounce');\n\nfunction a () {\n  new pnotify({\n    title: 'Simple Notification',\n    text: \"Hey, I'm a simple notification.\",\n  });\n};\n\na();\n// refs.input.addEventListener('input', debounce(getInputValue, 500));\n\nrefs.input.addEventListener('input', getInputValue);\n\nfunction getInputValue(e) {\n  let inputValue = e.target.value.trim();\n\n  getCountryName(inputValue);\n}\n\n\nfunction renderMarkup(countries) {\n  reset();\n  console.log(countries);\n  countries.forEach(country => {\n    if (countries.length === 1) {\n      refs.fullCountryInfo.insertAdjacentHTML(\n        'beforeend',\n        `<h1 class=\"country-name\">${country.name}</h1>\n        <div class=\"country-info-wrap\">\n          <ul class=\"country-info-list\">\n            <li class=\"country-info-items\">Capital: ${country.capital}</li>\n            <li class=\"country-info-items\">Population: ${country.population}</li>\n            <li class=\"country-info-items\"> Languages: \n              <ul class=\"lang-wrap\">${country.languages.name}</ul>\n            </li>\n          </ul>\n          <div class=\"country-flag\"><img src=\"${country.flag}\" alt=\"Flag of the country\"</div>\n        </div>`,\n      );\n    } else if (countries.length >= 2 && countries.length < 10) {\n      refs.result.insertAdjacentHTML('beforeend', `<li class=\"country-list-item\">${country.name}</li>`);\n    } else if (countries.length > 10) {\n      console.log('Too many matches found');\n    }\n  });\n  }\n\n\nfunction getCountryName(inputValue) {\n  fetchCountries(inputValue).then(countries => renderMarkup(countries));\n}\n\nfunction reset() {\n  refs.fullCountryInfo.innerHTML = '';\n  refs.result.innerHTML = '';\n}"]}